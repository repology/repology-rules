# vim: tabstop=39 expandtab softtabstop=39 nomodeline

# llvm misc.
- { setname: llvm, namepat: "llvm-toolchain-[0-9.-]+", addflavor: toolchain }
- { setname: llvm, namepat: "llvm[0-9.-]+" }
- { setname: llvm, namepat: "llvm[0-9.-]+-(lib|dev|build)", addflavor: $1, ruleset: chromebrew }
- { setname: llvm, name: [llvm-common,llvm-manpages,llvm-runtime,"python:llvm",mesa-private-llvm,llvm-minimal,llvm-test-suite,llvm-private,llvm-bootstrap], addflavor: true }
- { setname: llvm, name: llvm-devel, weak_devel: true, nolegacy: true }
- { setname: llvm, namepat: "llvm-toolset-[0-9.-]+-([a-z-]+)", addflavor: $1 }
- { setname: llvm, name: llvm-stable }
- { setname: llvm, name: llvm-rc, weak_devel: true }

- { setname: llvm, name: [clang+llvm-binaries], addflavor: true }

# See https://github.com/llvm/llvm-project/releases for full list of components which belong to LLVM

# clang
- { setname: llvm, name: [clang, clang-runtime, clang-toolchain, clang-common, clang-manpages, clang-tools, clang-format], addflavor: true }
- { setname: llvm, name: clang-wrapper, addflavor: clang, ruleset: nix } # see report
- { setname: llvm, namepat: "clang[0-9.-]+", addflavor: clang }
- { setname: llvm, name: clang-stable, addflavor: clang }
- { setname: llvm, name: clang-rc, addflavor: clang, weak_devel: true }

# clang-tools-extra
- { setname: llvm, name: clang-tools-extra, addflavor: true }

# compiler-rt
- { setname: llvm, name: [compiler-rt, compiler-rt-sanitizers], addflavor: true }
- { setname: llvm, name: compiler-rt8, addflavor: compiler-rt }
- { setname: llvm, name: wasi-compiler-rt11, addflavor: wasi-compiler-rt }
- { setname: llvm, name: compiler-rt-stable, addflavor: compiler-rt }
- { setname: llvm, name: compiler-rt-rc, addflavor: compiler-rt, weak_devel: true }

# flang
- { setname: llvm, name: flang, addflavor: true }
- { setname: llvm, name: [flang-11,flang-clang,flang-driver], addflavor: flang } # some legacy bits

# libllvm
- { setname: llvm, name: libllvm, addflavor: true }
- { setname: llvm, namepat: "libllvm[0-9.-]+", addflavor: libllvm }

# libc++
- { setname: llvm, name: libc++, addflavor: true }
- { setname: llvm, name: wasi-libcxx, addflavor: wasi-libc++ }
- { setname: llvm, name: klee-libc++, addflavor: true }
- { setname: llvm, name: libc++-stable, addflavor: libc++ }
- { setname: llvm, name: libc++-rc, addflavor: libc++, weak_devel: true }

# libc++abi
- { setname: llvm, name: [libc++abi,libcxx+libcxxabi], addflavor: libc++abi }

# libomp
- { setname: llvm, name: libomp, addflavor: true }
- { setname: llvm, name: openmp, addflavor: true }

# lld
- { setname: llvm, name: lld, addflavor: true }
- { setname: llvm, name: lld7, addflavor: lld }
- { setname: llvm, name: lld-stable, addflavor: lld }
- { setname: llvm, name: lld-rc, addflavor: lld, weak_devel: true }

# lldb
- { setname: llvm, name: [lldb, lldb-assert,lldb-polly], addflavor: true }
- { setname: llvm, namepat: "lldb[0-9.-]*-split", addflavor: lldb }
- { setname: llvm, namepat: "lldb[0-9.-]+", addflavor: lldb }
- { setname: llvm, name: lldb-stable, addflavor: lldb }
- { setname: llvm, name: lldb-rc, addflavor: lldb, weak_devel: true }

# llvm-libunwind
- { setname: llvm, name: llvm-libunwind, addflavor: true } # also some 'unwind' bits are merged in 850 ruleset

# ocaml
- { setname: llvm, name: ["ocaml:llvm", "ocaml:llvm-ocaml"], addflavor: ocaml }

# polly
- { setname: llvm, name: polly-stable, addflavor: polly }
- { setname: llvm, name: polly-rc, addflavor: polly, weak_devel: true }
